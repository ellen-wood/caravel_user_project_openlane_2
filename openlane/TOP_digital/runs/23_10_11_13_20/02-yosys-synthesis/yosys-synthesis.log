
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.30+48 (git sha1 14d50a176d5, clang++ 11.1.0 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v
Parsing SystemVerilog input from `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v' to AST representation.
Generating RTLIL representation for module `\TOP_digital'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/defines.v
Parsing SystemVerilog input from `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/defines.v' to AST representation.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v
Parsing SystemVerilog input from `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v' to AST representation.
Generating RTLIL representation for module `\pwm_counter'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_oneshot_detector.v
Parsing SystemVerilog input from `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_oneshot_detector.v' to AST representation.
Generating RTLIL representation for module `\pwm_oneshot_detector'.
Successfully finished Verilog frontend.

5. Generating Graphviz representation of design.
Writing dot description to `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/02-yosys-synthesis/hierarchy.dot'.
Dumping module TOP_digital to page 1.

6. Executing HIERARCHY pass (managing design hierarchy).

6.1. Analyzing design hierarchy..
Top module:  \TOP_digital
Used module:     \pwm_oneshot_detector
Used module:     \pwm_counter
Parameter \WIDTH = 8

6.2. Executing AST frontend in derive mode using pre-parsed AST for module `\pwm_oneshot_detector'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8

6.3. Executing AST frontend in derive mode using pre-parsed AST for module `\pwm_counter'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000'.

6.4. Analyzing design hierarchy..
Top module:  \TOP_digital
Used module:     $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000
Used module:     $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000

6.5. Analyzing design hierarchy..
Top module:  \TOP_digital
Used module:     $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000
Used module:     $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000
Removing unused module `\pwm_oneshot_detector'.
Removing unused module `\pwm_counter'.
Removed 2 unused modules.
Warning: Resizing cell port TOP_digital.pwm_fall_detector.pos from 32 bits to 8 bits.
Warning: Resizing cell port TOP_digital.pwm_rise_detector.pos from 32 bits to 8 bits.
Renaming module TOP_digital to TOP_digital.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \TOP_digital
Used module:     $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000
Used module:     $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000

7.2. Analyzing design hierarchy..
Top module:  \TOP_digital
Used module:     $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000
Used module:     $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:191$6'.
Cleaned up 1 empty switch.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:220$12 in module TOP_digital.
Marked 1 switch rules as full_case in process $proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1 in module TOP_digital.
Marked 1 switch rules as full_case in process $proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:15$23 in module $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.
Removed a total of 0 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 0 assignments to connections.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~6 debug messages>

14. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:220$12'.
     1/1: $0\wbs_ack_o[0:0]
Creating decoders for process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:191$6'.
     1/1: $0\wbs_dat_o[31:0]
Creating decoders for process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
     1/9: $0\CTRL_reg[31:0]
     2/9: $0\pwm3_fall_pos[31:0]
     3/9: $0\pwm3_rise_pos[31:0]
     4/9: $0\pwm2_fall_pos[31:0]
     5/9: $0\pwm2_rise_pos[31:0]
     6/9: $0\pwm1_fall_pos[31:0]
     7/9: $0\pwm1_rise_pos[31:0]
     8/9: $0\pwm0_fall_pos[31:0]
     9/9: $0\pwm0_rise_pos[31:0]
Creating decoders for process `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:15$23'.
     1/1: $0\count[7:0]

15. Executing PROC_DLATCH pass (convert process syncs to latches).

16. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\TOP_digital.\wbs_ack_o' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:220$12'.
  created $dff cell `$procdff$132' with positive edge clock.
Creating register for signal `\TOP_digital.\wbs_dat_o' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:191$6'.
  created $dff cell `$procdff$133' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm0_rise_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$134' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm0_fall_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$135' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm1_rise_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$136' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm1_fall_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$137' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm2_rise_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$138' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm2_fall_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$139' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm3_rise_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$140' with positive edge clock.
Creating register for signal `\TOP_digital.\pwm3_fall_pos' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$141' with positive edge clock.
Creating register for signal `\TOP_digital.\CTRL_reg' using process `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
  created $dff cell `$procdff$142' with positive edge clock.
Creating register for signal `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.\count' using process `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:15$23'.
  created $dff cell `$procdff$143' with positive edge clock.

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:220$12'.
Removing empty process `TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:220$12'.
Found and cleaned up 1 empty switch in `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:191$6'.
Removing empty process `TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:191$6'.
Found and cleaned up 3 empty switches in `\TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
Removing empty process `TOP_digital.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:159$1'.
Found and cleaned up 1 empty switch in `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:15$23'.
Removing empty process `$paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.$proc$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:15$23'.
Cleaned up 6 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module TOP_digital...
Checking module $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000...
Checking module $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.
<suppressed ~6 debug messages>
Optimizing module $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000.
Optimizing module $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.

21. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\pwm_oneshot_detector\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\pwm_counter\WIDTH=s32'00000000000000000000000000001000.
<suppressed ~3 debug messages>

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 35 unused cells and 80 unused wires.
<suppressed ~47 debug messages>

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

24.16. Finished OPT passes. (There is nothing left to do.)

25. Executing FSM pass (extract and optimize FSM).

25.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking TOP_digital.wbs_dat_o as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

25.2. Executing FSM_EXTRACT pass (extracting FSM from design).

25.3. Executing FSM_OPT pass (simple optimizations of FSMs).

25.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

25.5. Executing FSM_OPT pass (simple optimizations of FSMs).

25.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

25.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

25.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

26.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$135 ($dff) from module TOP_digital (D = $procmux$109_Y, Q = \pwm0_fall_pos, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$144 ($sdff) from module TOP_digital (D = \wbs_dat_i, Q = \pwm0_fall_pos).
Adding SRST signal on $procdff$134 ($dff) from module TOP_digital (D = $procmux$124_Y, Q = \pwm0_rise_pos, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$148 ($sdff) from module TOP_digital (D = \wbs_dat_i, Q = \pwm0_rise_pos).
Adding EN signal on $procdff$133 ($dff) from module TOP_digital (D = 32'10101010010101010011001100010001, Q = \wbs_dat_o).
Adding SRST signal on $procdff$132 ($dff) from module TOP_digital (D = $logic_and$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:225$18_Y, Q = \wbs_ack_o, rval = 1'0).
Adding SRST signal on $flatten\pwm_counter0.$procdff$143 ($dff) from module TOP_digital (D = $flatten\pwm_counter0.$add$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:19$24_Y, Q = \pwm_counter0.count, rval = 8'00000000).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 8 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 9 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 12 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 13 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 16 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 18 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 20 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 22 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 25 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 27 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 29 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.
Setting constant 1-bit at position 31 on $auto$ff.cc:266:slice$152 ($dffe) from module TOP_digital.

26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 11 unused cells and 11 unused wires.
<suppressed ~12 debug messages>

26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

26.9. Rerunning OPT passes. (Maybe there is more to do..)

26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

26.13. Executing OPT_DFF pass (perform DFF optimizations).

26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

26.16. Finished OPT passes. (There is nothing left to do.)

27. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 32) from port B of cell TOP_digital.$eq$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:225$15 ($eq).
Removed top 2 bits (of 32) from port B of cell TOP_digital.$eq$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/TOP_digital.v:225$16 ($eq).
Removed top 24 bits (of 32) from FF cell TOP_digital.$auto$ff.cc:266:slice$149 ($sdffe).
Removed top 24 bits (of 32) from FF cell TOP_digital.$auto$ff.cc:266:slice$145 ($sdffe).

28. Executing PEEPOPT pass (run peephole optimizers).

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

30. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module TOP_digital:
  creating $macc model for $flatten\pwm_counter0.$add$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:19$24 ($add).
  creating $alu model for $macc $flatten\pwm_counter0.$add$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:19$24.
  creating $alu cell for $flatten\pwm_counter0.$add$/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/src/pwm_counter.v:19$24: $auto$alumacc.cc:485:replace_alu$155
  created 1 $alu and 0 $macc cells.

31. Executing SHARE pass (SAT-based resource sharing).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

32.9. Finished OPT passes. (There is nothing left to do.)

33. Executing MEMORY pass.

33.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

33.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

33.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

33.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

33.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

33.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

33.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

33.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

33.10. Executing MEMORY_COLLECT pass (generating $mem cells).

34. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.
<suppressed ~10 debug messages>

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

35.3. Executing OPT_DFF pass (perform DFF optimizations).

35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

35.5. Finished fast OPT passes.

36. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

37.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

37.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

37.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

37.6. Executing OPT_SHARE pass.

37.7. Executing OPT_DFF pass (perform DFF optimizations).

37.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

37.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

37.10. Finished OPT passes. (There is nothing left to do.)

38. Executing TECHMAP pass (map to technology primitives).

38.1. Executing Verilog-2005 frontend: /nix/store/s60fmmgwaxhgbnishnn1d23m11gb8pb7-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/s60fmmgwaxhgbnishnn1d23m11gb8pb7-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

38.2. Continuing TECHMAP pass.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~256 debug messages>

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.
<suppressed ~107 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 10 unused cells and 54 unused wires.
<suppressed ~11 debug messages>

39.5. Finished fast OPT passes.

40. Executing ABC pass (technology mapping using ABC).

40.1. Extracting gate netlist of module `\TOP_digital' to `<abc-temp-dir>/input.blif'..
Extracted 95 gates and 154 wires to a netlist network with 59 inputs and 13 outputs.

40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

40.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:       41
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:        4
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:            ANDNOT cells:       12
ABC RESULTS:               XOR cells:       20
ABC RESULTS:        internal signals:       82
ABC RESULTS:           input signals:       59
ABC RESULTS:          output signals:       13
Removing temp directory.

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 0 unused cells and 101 unused wires.
<suppressed ~1 debug messages>

41.5. Finished fast OPT passes.

42. Executing HIERARCHY pass (managing design hierarchy).

42.1. Analyzing design hierarchy..
Top module:  \TOP_digital

42.2. Analyzing design hierarchy..
Top module:  \TOP_digital
Removed 0 unused modules.

43. Printing statistics.

=== TOP_digital ===

   Number of wires:                122
   Number of wire bits:            655
   Number of public wires:          42
   Number of public wire bits:     561
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                113
     $_ANDNOT_                      12
     $_AND_                          5
     $_NAND_                         4
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                        1
     $_OR_                          41
     $_SDFFE_PP0P_                  16
     $_SDFF_PP0_                     9
     $_XNOR_                         3
     $_XOR_                         20

44. Executing CHECK pass (checking for obvious problems).
Checking module TOP_digital...
Found and reported 0 problems.

45. Generating Graphviz representation of design.
Writing dot description to `/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/02-yosys-synthesis/post_techmap.dot'.
Dumping module TOP_digital to page 1.

46. Executing SHARE pass (SAT-based resource sharing).

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

47.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \TOP_digital..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

47.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \TOP_digital.
Performed a total of 0 changes.

47.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\TOP_digital'.
Removed a total of 0 cells.

47.6. Executing OPT_DFF pass (perform DFF optimizations).

47.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..

47.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module TOP_digital.

47.9. Finished OPT passes. (There is nothing left to do.)

48. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 0 unused cells and 12 unused wires.
<suppressed ~12 debug messages>
{
   "creator": "Yosys 0.30+48 (git sha1 14d50a176d5, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\TOP_digital": {
         "num_wires":         110,
         "num_wire_bits":     560,
         "num_pub_wires":     30,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         113,
         "num_cells_by_type": {
            "$_ANDNOT_": 12,
            "$_AND_": 5,
            "$_NAND_": 4,
            "$_NOR_": 1,
            "$_NOT_": 1,
            "$_ORNOT_": 1,
            "$_OR_": 41,
            "$_SDFFE_PP0P_": 16,
            "$_SDFF_PP0_": 9,
            "$_XNOR_": 3,
            "$_XOR_": 20
         }
      }
   },
      "design": {
         "num_wires":         110,
         "num_wire_bits":     560,
         "num_pub_wires":     30,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         113,
         "num_cells_by_type": {
            "$_ANDNOT_": 12,
            "$_AND_": 5,
            "$_NAND_": 4,
            "$_NOR_": 1,
            "$_NOT_": 1,
            "$_ORNOT_": 1,
            "$_OR_": 41,
            "$_SDFFE_PP0P_": 16,
            "$_SDFF_PP0_": 9,
            "$_XNOR_": 3,
            "$_XOR_": 20
         }
      }
}

[INFO] Applying latch mapping from '/root/eda/pdk/sky130B/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v'â¦

49. Executing TECHMAP pass (map to technology primitives).

49.1. Executing Verilog-2005 frontend: /root/eda/pdk/sky130B/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/root/eda/pdk/sky130B/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

49.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

50. Executing SIMPLEMAP pass (map simple cells to gate primitives).

51. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

51.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\TOP_digital':
  mapped 25 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.
{
   "creator": "Yosys 0.30+48 (git sha1 14d50a176d5, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\TOP_digital": {
         "num_wires":         151,
         "num_wire_bits":     601,
         "num_pub_wires":     30,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         154,
         "num_cells_by_type": {
            "$_ANDNOT_": 12,
            "$_AND_": 5,
            "$_MUX_": 41,
            "$_NAND_": 4,
            "$_NOR_": 1,
            "$_NOT_": 1,
            "$_ORNOT_": 1,
            "$_OR_": 41,
            "$_XNOR_": 3,
            "$_XOR_": 20,
            "sky130_fd_sc_hd__dfxtp_2": 25
         }
      }
   },
      "design": {
         "num_wires":         151,
         "num_wire_bits":     601,
         "num_pub_wires":     30,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         154,
         "num_cells_by_type": {
            "$_ANDNOT_": 12,
            "$_AND_": 5,
            "$_MUX_": 41,
            "$_NAND_": 4,
            "$_NOR_": 1,
            "$_NOT_": 1,
            "$_ORNOT_": 1,
            "$_OR_": 41,
            "$_XNOR_": 3,
            "$_XOR_": 20,
            "sky130_fd_sc_hd__dfxtp_2": 25
         }
      }
}

[INFO] USING STRATEGY AREA 0

52. Executing ABC pass (technology mapping using ABC).

52.1. Extracting gate netlist of module `\TOP_digital' to `/tmp/yosys-abc-ne2Kt9/input.blif'..
Extracted 129 gates and 198 wires to a netlist network with 68 inputs and 27 outputs.

52.1.1. Executing ABC.
Running ABC command: "/nix/store/s60fmmgwaxhgbnishnn1d23m11gb8pb7-yosys/bin/yosys-abc" -s -f /tmp/yosys-abc-ne2Kt9/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-ne2Kt9/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-ne2Kt9/input.blif 
ABC: + read_lib -w /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/tmp/14efca45e1324bb3a2890a5494c6ba35.lib 
ABC: Parsing finished successfully.  Parsing time =     0.06 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/tmp/14efca45e1324bb3a2890a5494c6ba35.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.08 sec
ABC: Memory =    9.54 MB. Time =     0.08 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/02-yosys-synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2/Y".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /root/eda/caravel_user_project_openlane_2/openlane/TOP_digital/runs/23_10_11_13_20/02-yosys-synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 25000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 25000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + 
ABC: + stime -p 
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: WireLoad = "none"  Gates =     98 (  8.2 %)   Cap = 11.2 ff (  1.0 %)   Area =      922.13 ( 91.8 %)   Delay =  2349.61 ps  ( 41.8 %)               
ABC: Path  0 --      49 : 0    1 pi                       A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout =   1.5 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     147 : 4    1 sky130_fd_sc_hd__or4_2   A =   8.76  Df = 655.7 -561.4 ps  S = 107.0 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 310.4 ff  G =  290  
ABC: Path  2 --     151 : 4   19 sky130_fd_sc_hd__nor4_2  A =  12.51  Df =1660.3-1382.3 ps  S =1162.7 ps  Cin =  4.3 ff  Cout =  49.7 ff  Cmax =  64.1 ff  G = 1114  
ABC: Path  3 --     159 : 3    8 sky130_fd_sc_hd__nand3_2 A =  10.01  Df =1927.6-1481.2 ps  S = 290.3 ps  Cin =  4.4 ff  Cout =  19.9 ff  Cmax = 260.0 ff  G =  418  
ABC: Path  4 --     161 : 4    1 sky130_fd_sc_hd__o211a_2 A =  10.01  Df =2349.6 -121.2 ps  S = 203.9 ps  Cin =  2.4 ff  Cout =  33.4 ff  Cmax = 268.3 ff  G = 1415  
ABC: Start-point = pi48 (\wbs_adr_i [21]).  End-point = po11 ($auto$rtlil.cc:2607:MuxGate$696).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   68/   27  lat =    0  nd =    98  edge =    331  area =922.21  delay = 4.00  lev = 4
ABC: + write_blif /tmp/yosys-abc-ne2Kt9/output.blif 

52.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       16
ABC RESULTS:        internal signals:      103
ABC RESULTS:           input signals:       68
ABC RESULTS:          output signals:       27
Removing temp directory.

53. Executing SETUNDEF pass (replace undef values with defined constants).

54. Executing HILOMAP pass (mapping to constant drivers).
Warning: Selection "sky130_fd_sc_hd__conb_1" did not match any module.
Warning: Selection "LO" did not match any object.

55. Executing SPLITNETS pass (splitting up multi-bit signals).

56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \TOP_digital..
Removed 0 unused cells and 205 unused wires.
<suppressed ~1 debug messages>

57. Executing INSBUF pass (insert buffer cells for connected wires).
Add TOP_digital/$auto$insbuf.cc:97:execute$856: 1'1 -> \wbs_dat_o [0]
Add TOP_digital/$auto$insbuf.cc:97:execute$857: 1'0 -> \wbs_dat_o [1]
Add TOP_digital/$auto$insbuf.cc:97:execute$858: 1'0 -> \wbs_dat_o [2]
Add TOP_digital/$auto$insbuf.cc:97:execute$859: 1'0 -> \wbs_dat_o [3]
Add TOP_digital/$auto$insbuf.cc:97:execute$860: 1'1 -> \wbs_dat_o [4]
Add TOP_digital/$auto$insbuf.cc:97:execute$861: 1'0 -> \wbs_dat_o [5]
Add TOP_digital/$auto$insbuf.cc:97:execute$862: 1'0 -> \wbs_dat_o [6]
Add TOP_digital/$auto$insbuf.cc:97:execute$863: 1'0 -> \wbs_dat_o [7]
Add TOP_digital/$auto$insbuf.cc:97:execute$864: 1'1 -> \wbs_dat_o [8]
Add TOP_digital/$auto$insbuf.cc:97:execute$865: 1'1 -> \wbs_dat_o [9]
Add TOP_digital/$auto$insbuf.cc:97:execute$866: 1'0 -> \wbs_dat_o [10]
Add TOP_digital/$auto$insbuf.cc:97:execute$867: 1'0 -> \wbs_dat_o [11]
Add TOP_digital/$auto$insbuf.cc:97:execute$868: 1'1 -> \wbs_dat_o [12]
Add TOP_digital/$auto$insbuf.cc:97:execute$869: 1'1 -> \wbs_dat_o [13]
Add TOP_digital/$auto$insbuf.cc:97:execute$870: 1'0 -> \wbs_dat_o [14]
Add TOP_digital/$auto$insbuf.cc:97:execute$871: 1'0 -> \wbs_dat_o [15]
Add TOP_digital/$auto$insbuf.cc:97:execute$872: 1'1 -> \wbs_dat_o [16]
Add TOP_digital/$auto$insbuf.cc:97:execute$873: 1'0 -> \wbs_dat_o [17]
Add TOP_digital/$auto$insbuf.cc:97:execute$874: 1'1 -> \wbs_dat_o [18]
Add TOP_digital/$auto$insbuf.cc:97:execute$875: 1'0 -> \wbs_dat_o [19]
Add TOP_digital/$auto$insbuf.cc:97:execute$876: 1'1 -> \wbs_dat_o [20]
Add TOP_digital/$auto$insbuf.cc:97:execute$877: 1'0 -> \wbs_dat_o [21]
Add TOP_digital/$auto$insbuf.cc:97:execute$878: 1'1 -> \wbs_dat_o [22]
Add TOP_digital/$auto$insbuf.cc:97:execute$879: 1'0 -> \wbs_dat_o [23]
Add TOP_digital/$auto$insbuf.cc:97:execute$880: 1'0 -> \wbs_dat_o [24]
Add TOP_digital/$auto$insbuf.cc:97:execute$881: 1'1 -> \wbs_dat_o [25]
Add TOP_digital/$auto$insbuf.cc:97:execute$882: 1'0 -> \wbs_dat_o [26]
Add TOP_digital/$auto$insbuf.cc:97:execute$883: 1'1 -> \wbs_dat_o [27]
Add TOP_digital/$auto$insbuf.cc:97:execute$884: 1'0 -> \wbs_dat_o [28]
Add TOP_digital/$auto$insbuf.cc:97:execute$885: 1'1 -> \wbs_dat_o [29]
Add TOP_digital/$auto$insbuf.cc:97:execute$886: 1'0 -> \wbs_dat_o [30]
Add TOP_digital/$auto$insbuf.cc:97:execute$887: 1'1 -> \wbs_dat_o [31]

58. Executing CHECK pass (checking for obvious problems).
Checking module TOP_digital...
Warning: Wire TOP_digital.\wbs_dat_o [31] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [30] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [29] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [28] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [27] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [26] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [25] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [24] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [23] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [22] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [21] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [20] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [19] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [18] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [17] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [16] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [15] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [14] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [13] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [12] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [11] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [10] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [9] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [8] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [7] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [6] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [5] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [4] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [3] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [2] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [1] is used but has no driver.
Warning: Wire TOP_digital.\wbs_dat_o [0] is used but has no driver.
Warning: Wire TOP_digital.\wbs_ack_o is used but has no driver.
Warning: Wire TOP_digital.\pwm_rise_out is used but has no driver.
Warning: Wire TOP_digital.\pwm_fall_out is used but has no driver.
Found and reported 35 problems.
{
   "creator": "Yosys 0.30+48 (git sha1 14d50a176d5, clang++ 11.1.0 -fPIC -Os)",
   "invocation": "stat -json ",
   "modules": {
      "\\TOP_digital": {
         "num_wires":         147,
         "num_wire_bits":     562,
         "num_pub_wires":     51,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         155,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a21oi_2": 5,
            "sky130_fd_sc_hd__a221o_2": 4,
            "sky130_fd_sc_hd__a22o_2": 2,
            "sky130_fd_sc_hd__a31o_2": 16,
            "sky130_fd_sc_hd__and3_2": 4,
            "sky130_fd_sc_hd__and4_2": 2,
            "sky130_fd_sc_hd__and4bb_2": 1,
            "sky130_fd_sc_hd__buf_2": 32,
            "sky130_fd_sc_hd__dfxtp_2": 25,
            "sky130_fd_sc_hd__inv_2": 8,
            "sky130_fd_sc_hd__nand3_2": 2,
            "sky130_fd_sc_hd__nor2_2": 6,
            "sky130_fd_sc_hd__nor3_2": 2,
            "sky130_fd_sc_hd__nor4_2": 3,
            "sky130_fd_sc_hd__o211a_2": 16,
            "sky130_fd_sc_hd__o21a_2": 4,
            "sky130_fd_sc_hd__o21ai_2": 1,
            "sky130_fd_sc_hd__o221ai_2": 2,
            "sky130_fd_sc_hd__o22ai_2": 2,
            "sky130_fd_sc_hd__or3_2": 1,
            "sky130_fd_sc_hd__or4_2": 9,
            "sky130_fd_sc_hd__or4b_2": 1,
            "sky130_fd_sc_hd__or4bb_2": 1,
            "sky130_fd_sc_hd__xnor2_2": 2,
            "sky130_fd_sc_hd__xor2_2": 4
         }
      }
   },
      "design": {
         "num_wires":         147,
         "num_wire_bits":     562,
         "num_pub_wires":     51,
         "num_pub_wire_bits": 466,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         155,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a21oi_2": 5,
            "sky130_fd_sc_hd__a221o_2": 4,
            "sky130_fd_sc_hd__a22o_2": 2,
            "sky130_fd_sc_hd__a31o_2": 16,
            "sky130_fd_sc_hd__and3_2": 4,
            "sky130_fd_sc_hd__and4_2": 2,
            "sky130_fd_sc_hd__and4bb_2": 1,
            "sky130_fd_sc_hd__buf_2": 32,
            "sky130_fd_sc_hd__dfxtp_2": 25,
            "sky130_fd_sc_hd__inv_2": 8,
            "sky130_fd_sc_hd__nand3_2": 2,
            "sky130_fd_sc_hd__nor2_2": 6,
            "sky130_fd_sc_hd__nor3_2": 2,
            "sky130_fd_sc_hd__nor4_2": 3,
            "sky130_fd_sc_hd__o211a_2": 16,
            "sky130_fd_sc_hd__o21a_2": 4,
            "sky130_fd_sc_hd__o21ai_2": 1,
            "sky130_fd_sc_hd__o221ai_2": 2,
            "sky130_fd_sc_hd__o22ai_2": 2,
            "sky130_fd_sc_hd__or3_2": 1,
            "sky130_fd_sc_hd__or4_2": 9,
            "sky130_fd_sc_hd__or4b_2": 1,
            "sky130_fd_sc_hd__or4bb_2": 1,
            "sky130_fd_sc_hd__xnor2_2": 2,
            "sky130_fd_sc_hd__xor2_2": 4
         }
      }
}

59. Executing Verilog backend.
Dumping module `\TOP_digital'.

Warnings: 39 unique messages, 39 total
End of script. Logfile hash: 7c4c74f836, CPU: user 0.20s system 0.01s, MEM: 41.16 MB peak
Yosys 0.30+48 (git sha1 14d50a176d5, clang++ 11.1.0 -fPIC -Os)
Time spent: 70% 2x abc (0 sec), 9% 1x dfflibmap (0 sec), ...
